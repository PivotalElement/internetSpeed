dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewResult <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
viewResult(dsl)
# Chunk 7
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
viewUpload(dsl[dsl$Upload<2,])
# Chunk 1
rm(list=ls())
require(xlsx)
# Chunk 2
dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewDownload <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
# Chunk 7
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
# Chunk 8
viewDownload(dsl)
viewDownload(dsl[dsl$NetworkType=="LAN",])
viewUpload(dsl[dsl$Upload<2,])
# Chunk 1
rm(list=ls())
require(xlsx)
# Chunk 2
dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewDownload <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
# Chunk 7
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
# Chunk 8
viewDownload(dsl)
viewDownload(dsl[dsl$NetworkType=="LAN",])
viewDownload(dsl[dsl$NetworkType=="WLAN",])
viewUpload(dsl[dsl$Upload<2,])
# Chunk 1
rm(list=ls())
require(xlsx)
# Chunk 2
dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewDownload <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
# Chunk 7
viewDownload(dsl)
viewUpload(dsl[dsl$Upload<2,])
source('~/Documents/Tom/R/moves/analysis/movesGraph.R', echo=TRUE)
source('~/Documents/Tom/R/moves/analysis/movesGraph.R', echo=TRUE)
plot(1,xlim=c(6.95,7.07), ylim=c(51.01,51.07), xlab='', ylab='', axes=F)
#region
#plot(1,xlim=c(6.8,7.2), ylim=c(50.85,51.09), xlab='', ylab='', axes=F)
#eu
#plot(1,xlim=c(2.,25.0), ylim=c(42.01,61.07), xlab='', ylab='', axes=F)
#us southwest ylim=c(34.721956,40.970810), xlim=c(-122.868312, -108.862478)
#plot(1,ylim=c(34.7,40.7), xlim=c(-122.9, -107.0), xlab='', ylab='', axes=F)
#san Francisco ylim=c(37.585420,37.825115),xlim=c( -122.529512,-122.323851)
#plot(1,ylim=c(37.7,37.825115),xlim=c( -122.529512,-122.323851), xlab='', ylab='', axes=F)
#plotTrack(jsonData2015[[3]][[1]]$activities[[2]]$trackPoints[[1]])
#plotDay(jsonData2015[[3]][[1]]$activities)
plotYear(jsonData2014[[3]])
plotYear(jsonData2015[[3]])
plotYear(jsonData2016[[3]])
plot(1,xlim=c(6.95,7.07), ylim=c(51.00,51.07), xlab='', ylab='', axes=F)
#region
#plot(1,xlim=c(6.8,7.2), ylim=c(50.85,51.09), xlab='', ylab='', axes=F)
#eu
#plot(1,xlim=c(2.,25.0), ylim=c(42.01,61.07), xlab='', ylab='', axes=F)
#us southwest ylim=c(34.721956,40.970810), xlim=c(-122.868312, -108.862478)
#plot(1,ylim=c(34.7,40.7), xlim=c(-122.9, -107.0), xlab='', ylab='', axes=F)
#san Francisco ylim=c(37.585420,37.825115),xlim=c( -122.529512,-122.323851)
#plot(1,ylim=c(37.7,37.825115),xlim=c( -122.529512,-122.323851), xlab='', ylab='', axes=F)
#plotTrack(jsonData2015[[3]][[1]]$activities[[2]]$trackPoints[[1]])
#plotDay(jsonData2015[[3]][[1]]$activities)
plotYear(jsonData2014[[3]])
plotYear(jsonData2015[[3]])
plotYear(jsonData2016[[3]])
# Chunk 1
rm(list=ls())
require(xlsx)
# Chunk 2
dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewDownload <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
# Chunk 7
viewDownload(dsl)
viewUpload(dsl[dsl$Upload<2,])
setwd("~/Documents/Tom/R/internetSpeed")
# Chunk 1
rm(list=ls())
require(xlsx)
# Chunk 2
dsl <- read.xlsx2(file='DSLSpeedTestData.xlsx', sheetIndex = 1, colClasses = NA)
# Chunk 3
dsl <- dsl[complete.cases(dsl),]          #delete the rows with NA
dsl$Date <- as.Date(dsl$Date, "%d.%m.%Y") #convert Data factor -> Date
# Chunk 4
summary(dsl)
# Chunk 5
boxplot(dsl$Download ~ dsl$Date, ylab="Download Speed (Mbps)")
# Chunk 6
createText <- function(txt){
if(is.vector(txt)){return(paste0(txt, collapse='\n'))}
else {return('text missing')}}
viewDownload <- function(data){
xScale <- c(0,20)
xBreaks <- seq(0,20, by=0.2)
b <- hist(data$Download, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 20, by=2))
mtext('download speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
# Median and max
lines(x = c(max(data$Download),max(data$Download)),
y = yScale, col='red', lty=2)
text(x = max(data$Download),y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c(' ','max',max(data$Download))))
lines(x = c(median(data$Download),median(data$Download)),
y = yScale, col='red', lty=2)
text(x = median(data$Download), y = yCeiling, pos = 4, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Download))))
lines(x = c(max(data$SpecDownload), max(data$SpecDownload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecDownload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecDownload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Download))))
}
viewUpload <- function(data){
xScale <- c(0,2)
xBreaks <- seq(0,2, by=0.02)
b <- hist(data$Upload, breaks = xBreaks)
yCeiling <- ceiling(max(b$counts)/10)*10
yScale <- c(0,yCeiling)
# plot
plot(b, xlim = xScale, ylim = yScale, main='', col='magenta',
axes=FALSE, xlab="", ylab="", border='white')
# yAxis
axis(2, las=1, cex.axis=0.8, lwd.ticks=0.5, col.ticks='black', lwd=0, tck=-0.025,
at= seq(from = 0, to = yCeiling, by = 10))
mtext('count', side=2, line=2, adj=1, cex=.8)
# xAxis
axis(1, las=1, cex.axis=0.8, lwd.ticks=0.6, col.ticks='black', lwd = 1,
at=seq(from = 0, to = 2, by=.1))
mtext('upload speed in Mbit/s', side=1, line=2, adj=0.5, cex=.8)
lines(x = c(median(data$Upload),median(data$Upload)),
y = yScale, col='red', lty=2)
text(x = median(data$Upload), y = yCeiling, pos = 2, cex=.7 ,xpd = T,
labels = createText(c(' ','median', median(data$Upload))))
lines(x = c(max(data$SpecUpload), max(data$SpecUpload)),
y = yScale, col='blue', lty=2)
text(x = max(data$SpecUpload), y = yCeiling, pos = 4, cex=.7, xpd = T,
labels = createText(c('max', "specification", max(data$SpecUpload))))
text(x = 0, y = yCeiling, pos = 4, cex = .7, xpd = T,
labels = createText(c("number of","measurements",length(data$Upload))))
}
# Chunk 7
viewDownload(dsl)
viewUpload(dsl[dsl$Upload<2,])
